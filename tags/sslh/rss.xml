<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Sslh on Entre Dev Y Ops</title>
    <link>http://www.entredevyops.es/tags/sslh.html</link>
    <description>Recent content in Sslh on Entre Dev Y Ops</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>es-es</language>
    <lastBuildDate>Wed, 27 Aug 2014 19:55:00 +0000</lastBuildDate>
    
	<atom:link href="http://www.entredevyops.es/tags/sslh/rss.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Laboratorio de sslh: Un puerto para dominarlos a todos</title>
      <link>http://www.entredevyops.es/posts/laboratorio-sslh.html</link>
      <pubDate>Wed, 27 Aug 2014 19:55:00 +0000</pubDate>
      
      <guid>http://www.entredevyops.es/posts/laboratorio-sslh.html</guid>
      <description>&lt;p&gt;En muchas redes corporativas me estoy encontrado que una manera que tienen los administradores de controlar la actividad de sus usuarios es bloquear el acceso de los clientes a ciertos puertos mediante reglas de firewall (por ejemplo denegar toda conexión al puerto 22 o solo permitir conexiones al puerto 80 o 443). Medida para nada afectiva, ya que no garantiza que el usuario no se conecte al servicio no deseado, sino que no se conecte al puerto por defecto de dicho servicio. Para saltarse esta restricción es tan sencillo como configurar el servicio en uno de los puertos permitidos.&lt;/p&gt;

&lt;p&gt;Si bien es cierto que puede ser bastante molesto, ya que obliga a modificar configuraciones, puede suponer un problema si ya tenemos un servicio activo en el puerto requerido. Esto me motivó a buscar la manera de, a través de un único puerto de un servidor, se pudiera acceder a diversos servicios.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>